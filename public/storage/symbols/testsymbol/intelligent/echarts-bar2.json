{
  "modified": "Wed Aug 21 2019 11:54:03 GMT+0900 (한국 표준시)",
  "dataBindings": [
    {
      "attr": "chartBackground",
      "valueType": "Color"
    },
    {
      "attr": "seriesDataA",
      "valueType": "NumberArray",
      "defaultValue": [
        400,
        400,
        300,
        300
      ]
    },
    {
      "attr": "seriesDataB",
      "valueType": "NumberArray",
      "defaultValue": [
        400,
        500,
        700,
        200
      ]
    },
    {
      "attr": "seriesDataC",
      "valueType": "NumberArray",
      "defaultValue": [
        100,
        400,
        900,
        200
      ]
    }
  ],
  "snapshotURL": "symbols/basic/snapshot_chart.json",
  "renderHTML": "__ht__function(data, gv, cache) {var myColor = ['#F44336', '#FF9800', '#d0570e'];\noption = {\n    backgroundColor:'',\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: { // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n          }\n    },\n    grid: {\n          left: '4%',\n          right: '5%',\n          bottom: '5%',\n          top:'28%',\n          containLabel: true\n    },\n    legend: {\n        data: ['1', '2', '3'],\n        right: 10,\n        top:12,\n        textStyle: {\n            color: \"#fff\"\n        },\n        itemWidth: 12,\n        itemHeight: 10,\n        // itemGap: 35\n    },\n    xAxis: {\n          type: 'category',\n          data: ['2012','2013','2014','2015'],\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(149, 165, 166,0.5)'\n\n            }\n          },\n          axisLabel: {\n            // interval: 0,\n            // rotate: 40,\n            textStyle: {\n              fontFamily: 'Microsoft YaHei'\n            }\n          },\n    },\n    yAxis: {\n          type: 'value',\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: 'rgba(149, 165, 166,0.5)'\n            }\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: 'rgba(149, 165, 166,0.5)'\n            }\n          },\n          axisLabel: {}\n    },\n        series: [{\n          name: '1',\n          type: 'bar',\n          barWidth: '15%',\n          itemStyle: {\n            normal: {\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: '#fccb05'\n                }, {\n                    offset: 1,\n                    color: '#f5804d'\n                }]),\n                barBorderRadius: 12,\n            },\n          },\n          data: [400, 400, 300, 300]\n        },\n        {\n          name: '2',\n          type: 'bar',\n          barWidth: '15%',\n          itemStyle: {\n            normal: {\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: '#8bd46e'\n                }, {\n                    offset: 1,\n                    color: '#09bcb7'\n                }]),\n                barBorderRadius: 11,\n            }\n            \n          },\n          data: [400, 500, 500, 500]\n        },\n        {\n          name: '3',\n          type: 'bar',\n          barWidth: '15%',\n          itemStyle: {\n            normal: {\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: '#248ff7'\n                }, {\n                    offset: 1,\n                    color: '#6851f1'\n                }]),\n            barBorderRadius: 11,\n            }\n          },\n          data: [400, 600, 700, 700]\n        }]\n};\n    if (!cache.htmlView) {\n        cache.htmlView = document.createElement('div');\n        cache.htmlView.style.position = 'absolute';\n        cache.htmlChart = echarts.init(cache.htmlView);\n\n        // layoutHTML will be called when the data needs to be drawing\n        cache.htmlView.layoutHTML = function() {\n            gv.layoutHTML(data, cache.htmlView, false);\n            cache.htmlChart.resize();\n        };\n    }\n\n    // update data\n    option.series[0].data = data.a('seriesDataA');\n    option.series[1].data = data.a('seriesDataB');\n    option.series[2].data = data.a('seriesDataC');\n    cache.htmlChart.setOption(option);\n\n    // html for showing\n    return cache.htmlView;}",
  "width": 200,
  "height": 120,
  "fitSize": true,
  "pixelPerfect": false,
  "attachStyle": "close",
  "comps": [
    {
      "type": "roundRect",
      "background": {
        "func": "attr@chartBackground",
        "value": "#030C20"
      },
      "borderColor": "#979797",
      "cornerRadius": 4,
      "visible": false,
      "displayName": "Rounded",
      "rect": [
        0,
        0,
        200,
        120
      ]
    }
  ]
}