{
  "modified": "Tue Jul 30 2019 14:55:30 GMT+0900 (한국 표준시)",
  "dataBindings": [
    {
      "attr": "chartBackground",
      "valueType": "Color"
    },
    {
      "attr": "legendName",
      "valueType": "StringArray",
      "defaultValue": [
        "le1",
        "le2",
        "le3"
      ]
    },
    {
      "attr": "seriesData1",
      "valueType": "NumberArray",
      "defaultValue": [
        200,
        300,
        150
      ]
    },
    {
      "attr": "seriesData2",
      "valueType": "NumberArray",
      "defaultValue": [
        300,
        250,
        148
      ]
    },
    {
      "attr": "seriesData3",
      "valueType": "NumberArray",
      "defaultValue": [
        50,
        180,
        22
      ]
    },
    {
      "attr": "legendColor",
      "valueType": "ColorArray",
      "defaultValue": [
        "#aaa",
        "#aeaeae"
      ]
    },
    {
      "attr": "barColor",
      "valueType": "ColorArray",
      "defaultValue": [
        "#aaa",
        "#bac111",
        "#acacac",
        "#555"
      ]
    },
    {
      "attr": "legendShow",
      "valueType": "Boolean",
      "defaultValue": true
    },
    {
      "attr": "category",
      "valueType": "StringArray",
      "defaultValue": [
        "cat",
        "dog",
        "bird",
        "fish"
      ]
    }
  ],
  "snapshotURL": "symbols/basic/snapshot_chart.json",
  "renderHTML": "__ht__function(data, gv, cache) {var option = {\n    tooltip : {\n        trigger: 'axis',\n        axisPointer : {         \n            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n        }\n    },\n    legend: {\n        show: false,\n        data: ['샘플1', '샘플2','샘플3'],\n        orient: 'vertical',\n        right: 10,\n        top: 0,\n        bottom: 20,\n        color: '#aaa',\n    },\n    grid: {\n        left: '3%',\n        right: '20%',\n        bottom: '3%',\n        containLabel: true\n    },\n    yAxis:  {\n        type: 'value',\n        axisLabel: {\n                textStyle: { color: '#aaa', fontSize: '14',}\n        },\n        boundaryGap : false,\n        axisLine: {show: true},\n        axisTick: {show: true},\n        splitLine: {\n        lineStyle: {\n            // Dark and light colors will be used in turns\n            color: ['#aaa', '#aaa']\n        }\n        },\n    },\n    xAxis: {\n        type: 'category',\n        data: ['cat1','cat2','cat3','cat4'],\n        axisLabel: {\n                textStyle: { color: '#aaa', fontSize: '14',}\n            },\n            axisLine: {show: true},\n            axisTick: {show: true},\n            splitLine: {\n                lineStyle: {\n                    // Dark and light colors will be used in turns\n                    color: ['#aaa', '#aaa']\n                }\n            },\n    }, \n    series: [\n        {\n            name: '샘플1',\n            type: 'bar',\n            stack: '总量',\n            barWidth: '40%',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'inside'\n                }\n            },\n            data: [320, 302, 301, 334]\n        },\n        {\n            name: '샘플2',\n            type: 'bar',\n            stack: '总量',\n            barWidth: '40%',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'inside'\n                }\n            },\n            data: [120, 132, 101, 134]\n        },\n        {\n            name: '샘플3',\n            type: 'bar',\n            stack: '总量',\n            barWidth: '40%',\n            label: {\n                normal: {\n                    show: true,\n                    position: 'inside'\n                }\n            },\n            data: [220, 182, 191, 234]\n        },\n    ]\n};\n\n    if (!cache.htmlView) {\n        cache.htmlView = document.createElement('div');\n        cache.htmlView.style.position = 'absolute';\n        cache.htmlChart = echarts.init(cache.htmlView);\n\n        // layoutHTML will be called when the data needs to be drawing\n        cache.htmlView.layoutHTML = function() {\n            gv.layoutHTML(data, cache.htmlView, false);\n            cache.htmlChart.resize();\n        };\n    }\n\n    // update data\n    option.series[0].data = data.a('seriesData1');\n    option.series[1].data = data.a('seriesData2');\n    option.series[2].data = data.a('seriesData3');\n    option.legend.data = data.a('legendName');\n    option.series[0].name = option.legend.data[0];\n    option.series[1].name = option.legend.data[1];\n    option.series[2].name = option.legend.data[2];\n    option.xAxis.data = data.a('category');\n    option.color = data.a('barColor');\n    option.legend.show = data.a('legendShow');\n    option.legend.textStyle = { color: data.a('legendColor') };\n    cache.htmlChart.setOption(option);\n\n    // html for showing\n    return cache.htmlView;}",
  "width": 200,
  "height": 120,
  "fitSize": true,
  "pixelPerfect": false,
  "attachStyle": "close",
  "comps": [
    {
      "type": "roundRect",
      "background": {
        "func": "attr@chartBackground",
        "value": "#030C20"
      },
      "borderColor": "#979797",
      "cornerRadius": 4,
      "visible": false,
      "displayName": "Rounded",
      "rect": [
        0,
        0,
        200,
        120
      ]
    }
  ]
}