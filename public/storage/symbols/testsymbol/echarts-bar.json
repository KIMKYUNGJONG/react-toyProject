{
  "modified": "Mon Apr 08 2019 17:11:14 GMT+0900 (한국 표준시)",
  "dataBindings": [
    {
      "attr": "chartBackground",
      "valueType": "Color"
    },
    {
      "attr": "seriesData",
      "valueType": "NumberArray",
      "defaultValue": [
        2,
        3,
        0
      ]
    }
  ],
  "snapshotURL": "symbols/basic/snapshot_chart.json",
  "renderHTML": "__ht__function(data, gv, cache) {var myColor = ['#F44336', '#FF9800', '#d0570e'];\noption = {\n    tooltip : {\n        trigger: 'item',\n        formatter: \"{b} : {c}\"\n    },\n    grid: {\n            left: '3%',\n            right: '3%',\n            bottom:'5%',\n            top: '10%',\n            containLabel: true\n        },\n    xAxis : [\n        {\n            type : 'category',\n            data : ['expired', '0~30', '30~60'],\n            axisLabel: {\n                textStyle: { color: '#aaa', fontSize: '14',}\n            },\n            axisLine: {show: false},\n            axisTick: {show: false},\n            splitLine: {show: false,},\n        }\n    ],\n    yAxis: {\n        type: 'value',\n        axisLabel: {\n                textStyle: { color: '#aaa', fontSize: '14',}\n        },\n        boundaryGap : false,\n        axisLine: {show: false},\n        axisTick: {show: false},\n        splitLine: {\n        lineStyle: {\n            // Dark and light colors will be used in turns\n            color: ['#666', '#666']\n        }\n}\n    },\n    series : [{\n            type: 'bar',\n            yAxisIndex: 0,\n            data: [2, 3, 0],\n            itemStyle: {\n                normal: {\n                    color: function(params) {\n                        var num = myColor.length;\n                        return myColor[params.dataIndex % num]\n                    },\n                }\n            }\n        }]\n};\n\n    if (!cache.htmlView) {\n        cache.htmlView = document.createElement('div');\n        cache.htmlView.style.position = 'absolute';\n        cache.htmlChart = echarts.init(cache.htmlView);\n\n        // layoutHTML will be called when the data needs to be drawing\n        cache.htmlView.layoutHTML = function() {\n            gv.layoutHTML(data, cache.htmlView, false);\n            cache.htmlChart.resize();\n        };\n    }\n\n    // update data\n    option.series[0].data = data.a('seriesData');\n    cache.htmlChart.setOption(option);\n\n    // html for showing\n    return cache.htmlView;}",
  "width": 200,
  "height": 120,
  "fitSize": true,
  "pixelPerfect": false,
  "attachStyle": "close",
  "comps": [
    {
      "type": "roundRect",
      "background": {
        "func": "attr@chartBackground",
        "value": "#030C20"
      },
      "borderColor": "#979797",
      "cornerRadius": 4,
      "visible": false,
      "displayName": "Rounded",
      "rect": [
        0,
        0,
        200,
        120
      ]
    }
  ]
}