{
  "modified": "Thu Jul 25 2019 15:04:28 GMT+0900 (한국 표준시)",
  "dataBindings": [
    {
      "attr": "legendData1",
      "valueType": "String",
      "defaultValue": "观日路",
      "name": "数据名称1"
    },
    {
      "attr": "legendData2",
      "valueType": "String",
      "defaultValue": "望海路",
      "name": "数据名称2"
    },
    {
      "attr": "chartBackground",
      "valueType": "Color",
      "defaultValue": "#030C20",
      "name": "背景颜色"
    },
    {
      "attr": "lineSmooth",
      "valueType": "Boolean",
      "defaultValue": true,
      "name": "线条平滑"
    },
    {
      "attr": "lineColor1",
      "valueType": "Color",
      "defaultValue": "rgb(47,112,250)",
      "name": "线条颜色1"
    },
    {
      "attr": "lineColor2",
      "valueType": "Color",
      "defaultValue": "rgb(224,118,25)",
      "name": "线条颜色2"
    },
    {
      "attr": "textColor",
      "valueType": "Color",
      "defaultValue": "rgb(124,145,155)",
      "name": "文字颜色"
    },
    {
      "attr": "lineData1",
      "valueType": "NumberArray",
      "name": "线条数据",
      "defaultValue": [
        1,
        3,
        7,
        5,
        2
      ]
    },
    {
      "attr": "xAxisData",
      "valueType": "StringArray",
      "defaultValue": [
        1,
        2,
        3,
        4,
        5
      ],
      "name": "横轴数据"
    }
  ],
  "snapshotURL": "symbols/basic/snapshot_chart.json",
  "renderHTML": "__ht__function(data, gv, cache) {var option = {\n        // grid: {\n        //     left: '3%',\n        //     right: '20%',\n        //     bottom: 0,\n        //     top: '5%',\n        //     containLabel: true\n        // },\n        xAxis : [\n            {\n                type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        axisTick: {show: false},\n        axisLine: {\n            lineStyle:{\n                color:'rgb(79,107,183)'\n            }\n        },\n        axisLabel:{\n            show:false\n        },\n            }\n        ],\n        yAxis : \n            {\n        type: 'value',\n        max:10,\n        min:0,\n        splitNumber:'2',\n        axisLine: {show: false},\n        axisTick: {show: false},\n        axisLabel:{\n            show:false\n        },\n        splitLine:{\n            lineStyle:{\n                color:'rgb(79,107,183)'\n            }\n        }\n        },\n        series: [\n        {\n        type: 'line',\n        symbol: 'none',\n        itemStyle: {\n                    normal: {color: 'rgb(255,120,79)'}\n                   },\n        smooth: true\n        }\n        ]\n        // series : [\n        //     {\n        //         type:'line',\n        //         areaStyle: {\n        //             normal: {\n        //                 color: 'rgba(27,85,245,0.40)'\n        //             }\n        //         }\n        //     },\n        //     {\n        //         type:'bar',\n        //         areaStyle: {\n        //             normal: {\n        //                 color: 'rgba(252,209,134,0.40)'\n        //             }\n        //         }\n        //     },\n        // ]\n    };\n\n    if (!cache.htmlView) {\n        cache.htmlView = document.createElement('div');\n        cache.htmlView.style.position = 'absolute';\n        cache.htmlChart = echarts.init(cache.htmlView);\n\n        // layoutHTML will be called when the data needs to be drawing\n        cache.htmlView.layoutHTML = function() {\n            gv.layoutHTML(data, cache.htmlView, false);\n            cache.htmlChart.resize();\n        };\n    }\n\n    // update data\n    // option.color = [data.a('lineColor1'), data.a('lineColor2')];\n    // option.legend.data = [data.a('legendData1'), data.a('legendData2') ];\n    // option.series[0].name = data.a('legendData1');\n    // option.series[1].name = data.a('legendData2');\n    option.series[0].data = data.a('lineData1');\n    // option.series[1].data = data.a('lineData2');\n    // option.series[2].data = data.a('lineData3');\n    // option.series[0].smooth = data.a('lineSmooth');\n    // option.series[1].smooth = data.a('lineSmooth');\n    // option.textStyle = { color: data.a('textColor') };\n    // option.legend.textStyle = { color: data.a('textColor') };\n    option.xAxis[0].data = data.a('xAxisData');\n    cache.htmlChart.setOption(option);\n\n    // html for showing\n    return cache.htmlView;}",
  "width": 200,
  "height": 120,
  "fitSize": true,
  "pixelPerfect": false,
  "comps": [
    {
      "type": "roundRect",
      "background": {
        "func": "attr@chartBackground",
        "value": "#030C20"
      },
      "borderColor": "#979797",
      "cornerRadius": 4,
      "visible": false,
      "rect": [
        0,
        0,
        200,
        120
      ]
    }
  ]
}