{
  "modified": "Thu Jul 25 2019 15:13:49 GMT+0900 (한국 표준시)",
  "dataBindings": [
    {
      "attr": "chartBackground",
      "valueType": "Color",
      "defaultValue": "#030C20",
      "name": "背景颜色"
    },
    {
      "attr": "lineSmooth",
      "valueType": "Boolean",
      "defaultValue": true,
      "name": "线条平滑"
    },
    {
      "attr": "textColor",
      "valueType": "Color",
      "defaultValue": "rgb(124,145,155)",
      "name": "文字颜色"
    },
    {
      "attr": "xAxisData",
      "valueType": "StringArray",
      "defaultValue": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "name": "横轴数据"
    },
    {
      "attr": "seriesData",
      "valueType": "ObjectArray",
      "defaultValue": [
        {
          "name": "line1",
          "value": [
            1,
            2,
            3
          ],
          "areaStyle": {
            "color": "red"
          }
        },
        {
          "name": "line2",
          "value": [
            3,
            4,
            5
          ],
          "areaStyle": {
            "color": "red"
          }
        }
      ],
      "name": "数据"
    }
  ],
  "snapshotURL": "symbols/basic/snapshot_chart.json",
  "renderHTML": "__ht__function(data, gv, cache) {var option = {\n    tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n            type: 'line',\n            label: {\n                backgroundColor: '#6a7985'\n            }\n        }\n    },\n    grid: {\n        // left: '3%',\n        // right: '5%',\n        // bottom: 0,\n        // top: '10%',\n        // containLabel: true\n    },\n    xAxis: [\n        {\n            type: 'category',\n            boundaryGap: false,\n            axisLine: { show: false },\n            splitLine: { show: false },\n            axisLabel: {}\n        }\n    ],\n    yAxis: [\n        {\n            type: 'value',\n            axisLine: { show: false },\n            splitLine: { show: false },\n            axisLabel: {}\n        }\n    ],\n    series: []\n};\n\nif (!cache.htmlView) {\n    cache.htmlView = document.createElement('div');\n    cache.htmlView.style.position = 'absolute';\n    cache.htmlChart = echarts.init(cache.htmlView);\n\n    // layoutHTML will be called when the data needs to be drawing\n    cache.htmlView.layoutHTML = function () {\n        gv.layoutHTML(data, cache.htmlView, false);\n        cache.htmlChart.resize();\n    };\n}\n\n// update data\n// option.color = [data.a('lineColor1'), data.a('lineColor2'), data.a('lineColor3')];\n// Option.legend.data=[data.a('legendData1'),data.a('legendData2'),data.a('legendData3'),data.a('legendData4'),data.a('legendData5'),data.a('legendData6')];\nvar seriseData = data.a('seriesData');\nvar seriseOption = [];\nfor(var i = 0, len = seriseData.length; i < len; i++) {\n    seriseOption.push({\n        name: seriseData[i].name,\n        type: 'line',\n        smooth: data.a('lineSmooth'),\n        areaStyle: {\n            normal: {\n                color: seriseData[i].areaStyle.color,\n                opacity: 0.2\n            }\n        },\n        data: seriseData[i].value\n    });\n}\n\noption.series = seriseOption\noption.textStyle = { color: data.a('textColor') };\noption.xAxis[0].data = data.a('xAxisData');\n\ncache.htmlChart.setOption(option, true);\n\n// html for showing\nreturn cache.htmlView;}",
  "width": 200,
  "height": 200,
  "fitSize": true,
  "pixelPerfect": false,
  "attachStyle": "close",
  "comps": [
    {
      "type": "roundRect",
      "background": {
        "func": "attr@chartBackground",
        "value": "#030C20"
      },
      "borderColor": "#979797",
      "cornerRadius": 4,
      "visible": false,
      "rect": [
        0,
        0,
        200,
        120
      ]
    }
  ]
}